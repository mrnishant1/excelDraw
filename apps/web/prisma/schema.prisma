generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  email       String       @unique
  password    String?
  name        String?
  image       String?
  memberships Membership[]
  chats       Chats[]
}

model Rooms {
  id          String       @id @default(uuid())
  roomcode    String       @unique
  createdBy   String      
  isPrivate   Boolean      @default(false)
  password    String?
  createdAt   DateTime     @default(now())
  memberships Membership[]
  chats       Chats[]
}

model Membership {
  id String @id @default(uuid())

  userId String
  roomId String
  role   Role
  user   User   @relation(fields: [userId], references: [id])
  room   Rooms  @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId])
}

model Chats {
  id String @id @default(uuid())

  user      User     @relation(fields: [userId], references: [id])
  userId    String
  room      Rooms    @relation(fields: [roomId], references: [id])
  roomId    String
  createdAt DateTime @default(now())
  type      ChatType @default(TEXT)
  content   String // could be text, JSON (for drawing), image URL, etc.
}

enum Role {
  ADMIN
  USER
  BANNED
}

enum ChatType {
  TEXT
  DRAWING
  IMAGE
  FILE
}
